<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright Â© 2016-2019 Cask Data, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not
  ~ use this file except in compliance with the License. You may obtain a copy of
  ~ the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing permissions and limitations under
  ~ the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.cdap.plugin</groupId>
  <artifactId>google-cloud</artifactId>
  <version>0.23.3-SNAPSHOT</version>
  <name>Google Cloud Plugins</name>
  <packaging>jar</packaging>
  <description>Plugins for Google Big Query</description>
  <url>https://github.com/data-integrations/google-cloud</url>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>CDAP</name>
      <email>cdap-dev@googlegroups.com</email>
      <organization>CDAP</organization>
      <organizationUrl>http://cdap.io</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:https://github.com/data-integrations/google-cloud.git</connection>
    <developerConnection>scm:git:git@github.com:data-integrations/google-cloud.git</developerConnection>
    <url>https://github.com/data-integrations/google-cloud.git</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <url>https://issues.cask.co/browse/CDAP</url>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>sonatype.release</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
    <snapshotRepository>
      <id>sonatype.snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <jee.version>7</jee.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <avro.version>1.8.2</avro.version>
    <bigquery.connector.hadoop2.version>hadoop2-1.2.0</bigquery.connector.hadoop2.version>
    <commons.codec.version>1.4</commons.codec.version>
    <cdap.version>6.9.1</cdap.version>
    <cdap.plugin.version>2.11.1</cdap.plugin.version>
    <dropwizard.metrics-core.version>3.2.6</dropwizard.metrics-core.version>
    <flogger.system.backend.version>0.7.1</flogger.system.backend.version>
    <gcs.connector.version>hadoop2-2.2.9</gcs.connector.version>
    <google.cloud.bigtable.version>1.17.1</google.cloud.bigtable.version>
    <google.cloud.bigquery.version>1.137.1</google.cloud.bigquery.version>
    <google.cloud.kms.version>2.0.2</google.cloud.kms.version>
    <google.cloud.pubsub.version>1.108.1</google.cloud.pubsub.version>
    <google.cloud.spanner.version>6.10.1</google.cloud.spanner.version>
    <google.cloud.speech.version>1.24.7</google.cloud.speech.version>
    <google.cloud.storage.version>2.3.0</google.cloud.storage.version>
    <google.cloud.datastore.version>1.105.1</google.cloud.datastore.version>
    <google.protobuf.java.version>3.19.4</google.protobuf.java.version>
    <google.tink.version>1.3.0-rc3</google.tink.version>
    <guava.version>27.0.1-jre</guava.version>
    <hadoop.version>2.9.2</hadoop.version>
    <hbase-shaded-client.version>1.4.13</hbase-shaded-client.version>
    <hbase-shaded-server.version>1.4.13</hbase-shaded-server.version>
    <httpclient.version>4.5.13</httpclient.version>
    <jackson.core.version>2.13.4.2</jackson.core.version>
    <junit.version>4.13.1</junit.version>
    <powermock.version>2.0.2</powermock.version>
    <slf4j.version>1.7.5</slf4j.version>
    <spark3.version>3.3.2</spark3.version>
    <spark-bq-connector.version>0.23.1</spark-bq-connector.version>
    <failsafe.version>3.3.2</failsafe.version>
    <testSourceLocation>${project.basedir}/src/test/java/</testSourceLocation>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.google.apis</groupId>
        <artifactId>google-api-services-bigquery</artifactId>
        <version>v2-rev20210617-1.32.1</version>
      </dependency>
      <dependency>
        <groupId>com.google.apis</groupId>
        <artifactId>google-api-services-storage</artifactId>
        <version>v1-rev20211201-1.32.1</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <repositories>
    <repository>
      <id>sonatype</id>
      <url>https://oss.sonatype.org/content/groups/public</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>sonatype-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <dependencies>
    <!-- Start: dependency used by the Dataplex connector -->
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>3.1.6</version>
    </dependency>
    <dependency>
      <groupId>com.google.api</groupId>
      <artifactId>gax</artifactId>
      <version>2.12.2</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>api-common</artifactId>
          <groupId>com.google.api</groupId>
        </exclusion>
        <exclusion>
          <artifactId>google-auth-library-credentials</artifactId>
          <groupId>com.google.auth</groupId>
        </exclusion>
        <exclusion>
          <artifactId>threetenbp</artifactId>
          <groupId>org.threeten</groupId>
        </exclusion>
        <exclusion>
          <artifactId>google-auth-library-oauth2-http</artifactId>
          <groupId>com.google.auth</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jsr305</artifactId>
          <groupId>com.google.code.findbugs</groupId>
        </exclusion>
        <exclusion>
          <artifactId>guava</artifactId>
          <groupId>com.google.guava</groupId>
        </exclusion>
        <exclusion>
          <artifactId>opencensus-api</artifactId>
          <groupId>io.opencensus</groupId>
        </exclusion>
      </exclusions>
      <optional>false</optional>
    </dependency>
    <dependency>
      <groupId>com.google.api</groupId>
      <artifactId>gax-grpc</artifactId>
      <version>2.12.2</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>gax</artifactId>
          <groupId>com.google.api</groupId>
        </exclusion>
        <exclusion>
          <artifactId>api-common</artifactId>
          <groupId>com.google.api</groupId>
        </exclusion>
        <exclusion>
          <artifactId>proto-google-common-protos</artifactId>
          <groupId>com.google.api.grpc</groupId>
        </exclusion>
        <exclusion>
          <artifactId>google-auth-library-credentials</artifactId>
          <groupId>com.google.auth</groupId>
        </exclusion>
        <exclusion>
          <artifactId>guava</artifactId>
          <groupId>com.google.guava</groupId>
        </exclusion>
        <exclusion>
          <artifactId>grpc-api</artifactId>
          <groupId>io.grpc</groupId>
        </exclusion>
        <exclusion>
          <artifactId>threetenbp</artifactId>
          <groupId>org.threeten</groupId>
        </exclusion>
        <exclusion>
          <artifactId>google-auth-library-oauth2-http</artifactId>
          <groupId>com.google.auth</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jsr305</artifactId>
          <groupId>com.google.code.findbugs</groupId>
        </exclusion>
        <exclusion>
          <artifactId>grpc-auth</artifactId>
          <groupId>io.grpc</groupId>
        </exclusion>
        <exclusion>
          <artifactId>grpc-netty-shaded</artifactId>
          <groupId>io.grpc</groupId>
        </exclusion>
        <exclusion>
          <artifactId>grpc-protobuf</artifactId>
          <groupId>io.grpc</groupId>
        </exclusion>
        <exclusion>
          <artifactId>grpc-stub</artifactId>
          <groupId>io.grpc</groupId>
        </exclusion>
        <exclusion>
          <artifactId>grpc-xds</artifactId>
          <groupId>io.grpc</groupId>
        </exclusion>
      </exclusions>
      <optional>false</optional>
    </dependency>
    <!-- End: dependency used by the Dataplex connector -->
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${avro.version}</version>
    </dependency>
    <dependency>
      <groupId>io.cdap.cdap</groupId>
      <artifactId>cdap-formats</artifactId>
      <version>${cdap.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.avro</groupId>
          <artifactId>avro</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.cdap.cdap</groupId>
      <artifactId>cdap-features</artifactId>
      <version>${cdap.version}</version>
    </dependency>
    <dependency>
      <groupId>io.cdap.cdap</groupId>
      <artifactId>cdap-api</artifactId>
      <version>${cdap.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.cdap.cdap</groupId>
      <artifactId>cdap-etl-api</artifactId>
      <version>${cdap.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.cdap.cdap</groupId>
      <artifactId>cdap-etl-proto</artifactId>
      <version>${cdap.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.cdap.cdap</groupId>
      <artifactId>cdap-etl-batch</artifactId>
      <version>${cdap.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.cdap.plugin</groupId>
      <artifactId>format-common</artifactId>
      <version>${cdap.plugin.version}</version>
    </dependency>
    <dependency>
      <groupId>io.cdap.plugin</groupId>
      <artifactId>format-avro</artifactId>
      <version>${cdap.plugin.version}</version>
    </dependency>
    <dependency>
      <groupId>io.cdap.plugin</groupId>
      <artifactId>hydrator-common</artifactId>
      <version>${cdap.plugin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.cloud.bigdataoss</groupId>
      <artifactId>bigquery-connector</artifactId>
      <version>${bigquery.connector.hadoop2.version}</version>
      <exclusions>
        <!-- Dependencies are excluded because they are missing in central Maven repository -->
        <exclusion>
          <groupId>com.sun.jmx</groupId>
          <artifactId>jmxri</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jdmk</groupId>
          <artifactId>jmxtools</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.jms</groupId>
          <artifactId>jms</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.flogger</groupId>
          <artifactId>flogger-log4j-backend</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>guava</artifactId>
          <groupId>com.google.guava</groupId>
        </exclusion>
        <exclusion>
          <groupId>com.google.flogger</groupId>
          <artifactId>flogger</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.cloud.bigdataoss</groupId>
          <artifactId>util-hadoop</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.cloud.bigdataoss</groupId>
          <artifactId>util</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.cloud.bigtable</groupId>
      <artifactId>bigtable-hbase-1.x-mapreduce</artifactId>
      <version>${google.cloud.bigtable.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-server</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-annotations</artifactId>
        </exclusion>
        <!-- bigtable-hbase-1.x-mapreduce version 1.17.1 has a dependency on hbase-common:1.4.12
        which masks the shaded dependencies below . Exclude this dependency.
        All the classes should be present in the shaded jars-->
        <exclusion>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-common</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!--
        Required by bigtable-hbase-1.x-mapreduce instead of excluded non-shaded version.
        Shaded library is used to avoid dependency conflicts with Datastore module on profobuf-java dependency.
        Bigtable requires version 2.x and Datastore module requires 3.x protocol.
      -->
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-shaded-client</artifactId>
      <version>${hbase-shaded-client.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!--
        Required by bigtable-hbase-1.x-mapreduce instead of excluded non-shaded version.
        Shaded library is used to avoid dependency conflicts with Datastore module on profobuf-java dependency.
        Bigtable requires version 2.x and Datastore module requires 3.x protocol.
      -->
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-shaded-server</artifactId>
      <version>${hbase-shaded-server.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>${dropwizard.metrics-core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-bigquery</artifactId>
      <version>${google.cloud.bigquery.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.crypto.tink</groupId>
      <artifactId>tink</artifactId>
      <version>${google.tink.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.crypto.tink</groupId>
      <artifactId>tink-gcpkms</artifactId>
      <version>${google.tink.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-spanner</artifactId>
      <version>${google.cloud.spanner.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-datastore</artifactId>
      <version>${google.cloud.datastore.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <version>${hadoop.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>com.google.protobuf</groupId>
          <artifactId>protobuf-java</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.avro</groupId>
          <artifactId>avro</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.zookeeper</groupId>
          <artifactId>zookeeper</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>guava</artifactId>
          <groupId>com.google.guava</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jersey-core</artifactId>
          <groupId>com.sun.jersey</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jersey-json</artifactId>
          <groupId>com.sun.jersey</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jersey-server</artifactId>
          <groupId>com.sun.jersey</groupId>
        </exclusion>
        <exclusion>
          <artifactId>servlet-api</artifactId>
          <groupId>javax.servlet</groupId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty-util</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>jasper-compiler</artifactId>
          <groupId>tomcat</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jasper-runtime</artifactId>
          <groupId>tomcat</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jsp-api</artifactId>
          <groupId>javax.servlet.jsp</groupId>
        </exclusion>
        <exclusion>
          <artifactId>slf4j-api</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-core</artifactId>
      <version>${hadoop.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>com.google.protobuf</groupId>
          <artifactId>protobuf-java</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.avro</groupId>
          <artifactId>avro</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-yarn-common</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-yarn-client</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-speech</artifactId>
      <version>${google.cloud.speech.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-storage</artifactId>
      <version>${google.cloud.storage.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.cloud.bigdataoss</groupId>
      <artifactId>util-hadoop</artifactId>
      <version>${gcs.connector.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.flogger</groupId>
          <artifactId>flogger</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.flogger</groupId>
          <artifactId>flogger-log4j-backend</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>guava</artifactId>
          <groupId>com.google.guava</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.cloud.bigdataoss</groupId>
      <artifactId>gcs-connector</artifactId>
      <version>${gcs.connector.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>grpc-api</artifactId>
          <groupId>io.grpc</groupId>
        </exclusion>
        <exclusion>
          <groupId>io.opencensus</groupId>
          <artifactId>opencensus-impl</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>grpc-census</artifactId>
          <groupId>io.grpc</groupId>
        </exclusion>
        <exclusion>
          <artifactId>guava</artifactId>
          <groupId>com.google.guava</groupId>
        </exclusion>
        <exclusion>
          <groupId>com.google.flogger</groupId>
          <artifactId>flogger</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.flogger</groupId>
          <artifactId>flogger-log4j-backend</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-kms</artifactId>
      <version>${google.cloud.kms.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${google.protobuf.java.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-pubsub</artifactId>
      <version>${google.cloud.pubsub.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro-mapred</artifactId>
      <classifier>hadoop2</classifier>
      <version>${avro.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>io.cdap.cdap</groupId>
      <artifactId>hydrator-test</artifactId>
      <version>${cdap.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cdap.cdap</groupId>
      <artifactId>cdap-unit-test</artifactId>
      <version>${cdap.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.hive</groupId>
          <artifactId>hive-exec</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.cdap.cdap</groupId>
          <artifactId>cdap-explore-jdbc</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Start: Testing dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito2</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- End: Testing dependencies -->
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming_2.12</artifactId>
      <version>${spark3.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_2.12</artifactId>
      <version>${spark3.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-slf4j-impl</artifactId>
        </exclusion>
        <!--
            We still use hadoop2,
            so excluding hadoop3 dependencies from spark
          -->
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client-runtime</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.esotericsoftware.reflectasm</groupId>
          <artifactId>reflectasm</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.curator</groupId>
          <artifactId>curator-recipes</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.tachyonproject</groupId>
          <artifactId>tachyon-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-compiler</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty.orbit</groupId>
          <artifactId>javax.servlet</artifactId>
        </exclusion>
        <exclusion>
          <groupId>net.java.dev.jets3t</groupId>
          <artifactId>jets3t</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-all</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
      <version>1.1.7.2</version>
    </dependency>
    <!-- Start: dependency for Google PubSub Streaming Source -->
    <dependency>
      <groupId>org.apache.bahir</groupId>
      <artifactId>spark-streaming-pubsub_2.12</artifactId>
      <version>2.4.0</version>
    </dependency>
    <!-- End: dependency for Google PubSub Streaming Source -->

    <!-- Dependencies are required after updating bigquery.connector version from 0.13.1-hadoop2 to hadoop2-0.13.17 -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons.codec.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.flogger</groupId>
      <artifactId>flogger-system-backend</artifactId>
      <version>${flogger.system.backend.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpclient.version}</version>
    </dependency>
    <!-- Start: dependencies used by the Spark-BigQuery connector -->
    <dependency>
      <groupId>io.cdap.cdap</groupId>
      <artifactId>cdap-etl-api-spark</artifactId>
      <version>${cdap.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.cdap.cdap</groupId>
      <artifactId>cdap-api-spark3_2.12</artifactId>
      <version>${cdap.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.cloud.spark</groupId>
      <artifactId>spark-bigquery-with-dependencies_2.12</artifactId>
      <version>${spark-bq-connector.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_2.12</artifactId>
      <version>${spark3.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>dev.failsafe</groupId>
      <artifactId>failsafe</artifactId>
      <version>${failsafe.version}</version>
    </dependency>
    <!-- End: dependencies used by the Spark-BigQuery connector -->
    <!-- Start: dependency used by the Dataplex connector -->
    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-dataplex</artifactId>
      <version>0.2.0</version>
    </dependency>
    <!-- End: dependency used by the Dataplex connector -->
  </dependencies>

  <build>
    <testSourceDirectory>${testSourceLocation}</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>
        <executions>
          <execution>
            <id>validate</id>
            <phase>process-test-classes</phase>
            <configuration>
              <configLocation>checkstyle.xml</configLocation>
              <suppressionsLocation>suppressions.xml</suppressionsLocation>
              <encoding>UTF-8</encoding>
              <consoleOutput>true</consoleOutput>
              <failsOnError>true</failsOnError>
              <includeTestSourceDirectory>true</includeTestSourceDirectory>
              <testSourceDirectories>
                <testSourceDirectory>src/test/java</testSourceDirectory>
                <testSourceDirectory>src/e2e-test/java</testSourceDirectory>
              </testSourceDirectories>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>6.19</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.14.1</version>
        <configuration>
          <argLine>-Xmx512m</argLine>
          <systemPropertyVariables>
            <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
          </systemPropertyVariables>
          <includes>
            <include>**/*TestSuite.java</include>
            <include>**/Test*.java</include>
            <include>**/*Test.java</include>
            <include>**/*TestCase.java</include>
          </includes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>3.5.1</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Embed-Dependency>*;inline=false;scope=compile</Embed-Dependency>
            <Embed-Transitive>true</Embed-Transitive>
            <Embed-Directory>lib</Embed-Directory>
            <!--Only @Plugin classes in the export packages will be included as plugin-->
            <_exportcontents>
              io.cdap.plugin.gcp.*;
              com.google.cloud.hadoop.*;
              org.apache.spark.streaming.pubsub*;
              org.apache.hadoop.hbase.mapreduce.*;
              org.apache.hadoop.hbase.security.token.*;
              com.google.cloud.spark.bigquery.*;
            </_exportcontents>
          </instructions>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>io.cdap</groupId>
        <artifactId>cdap-maven-plugin</artifactId>
        <version>1.1.0</version>
        <configuration>
          <cdapArtifacts>
            <parent>system:cdap-data-pipeline[6.9.1-SNAPSHOT,7.0.0-SNAPSHOT)</parent>
            <parent>system:cdap-data-streams[6.9.1-SNAPSHOT,7.0.0-SNAPSHOT)</parent>
          </cdapArtifacts>
        </configuration>
        <executions>
          <execution>
            <id>create-artifact-config</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>create-plugin-json</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <id>enforce-banned-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>io.opencensus:opencensus-impl</exclude>
                  </excludes>
                  <message>
                    Exclude Open Census implementations to disable Open Census stats and tracing.
                    They are not used by the plugins. For tracing, Open Census spawns a new thread
                    and loads a single global instance of a TracingComponent. CDAP uses a separate
                    class loader for each plugin. This leads to spawning a new thread for each plugin
                    with the Open Census dependency. As this thread keeps a reference to the class
                    loader, it prevents the class loader from being garbage collected leading
                    to leaks. If no implementation of TracingComponent is found at runtime,
                    Open Census uses a NoopTraceComponent.
                  </message>
                </bannedDependencies>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- Profile for release. Includes signing of jars. -->
  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <!-- Source JAR -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>2.2.1</version>
            <configuration>
              <excludeResources>true</excludeResources>
            </configuration>
            <executions>
              <execution>
                <id>attach-sources</id>
                <phase>package</phase>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- Javadoc jar -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.9.1</version>
            <configuration>
              <additionalparam>-Xdoclint:none</additionalparam>
              <links>
                <link>http://download.oracle.com/javase/${jee.version}/docs/api/</link>
              </links>
              <doctitle>${project.name} ${project.version}</doctitle>
              <bottom>
                <![CDATA[Copyright &#169; {currentYear} <a href="http://cdap.io" target="_blank">CDAP</a> Licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0" target="_blank">Apache License, Version 2.0</a>.]]>
              </bottom>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadoc</id>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>attach-artifacts</id>
                <phase>package</phase>
                <goals>
                  <goal>attach-artifact</goal>
                </goals>
                <configuration>
                  <artifacts>
                    <artifact>
                      <file>target/${project.artifactId}-${project.version}.json</file>
                      <type>json</type>
                    </artifact>
                  </artifacts>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.5</version>
            <configuration>
              <passphrase>${gpg.passphrase}</passphrase>
              <useAgent>${gpg.useagent}</useAgent>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <version>2.5.3</version>
            <configuration>
              <tag>v${releaseVersion}</tag>
              <tagNameFormat>v@{project.version}</tagNameFormat>
              <autoVersionSubmodules>true</autoVersionSubmodules>
              <!-- releaseProfiles configuration will actually force a Maven profile
                â the `releases` profile â to become active during the Release process. -->
              <releaseProfiles>releases</releaseProfiles>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.2</version>
            <extensions>true</extensions>
            <configuration>
              <nexusUrl>https://oss.sonatype.org</nexusUrl>
              <serverId>sonatype.release</serverId>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>cloudBuild</id>
      <activation>
        <property><name>cloudBuild</name></property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <useFile>false</useFile>
              <redirectTestOutputToFile>false</redirectTestOutputToFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>e2e-tests</id>
      <properties>
        <testSourceLocation>src/e2e-test/java</testSourceLocation>
        <TEST_RUNNER>TestRunner.java</TEST_RUNNER>
      </properties>
      <build>
        <testResources>
          <testResource>
            <directory>src/e2e-test/resources</directory>
          </testResource>
        </testResources>
      <plugins>
        <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18.1</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
        </plugin>

        <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M5</version>
        <configuration>
          <includes>
            <include>${TEST_RUNNER}</include>
          </includes>
          <!--Start configuration to run TestRunners in parallel-->
          <parallel>classes</parallel> <!--Running TestRunner classes in parallel-->
          <threadCount>2</threadCount> <!--Number of classes to run in parallel-->
          <forkCount>2</forkCount> <!--Number of JVM processes -->
          <reuseForks>true</reuseForks>
          <!--End configuration to run TestRunners in parallel-->
          <environmentVariables>
            <GOOGLE_APPLICATION_CREDENTIALS>
              ${GOOGLE_APPLICATION_CREDENTIALS}
            </GOOGLE_APPLICATION_CREDENTIALS>
            <SERVICE_ACCOUNT_TYPE>
              ${SERVICE_ACCOUNT_TYPE}
            </SERVICE_ACCOUNT_TYPE>
            <SERVICE_ACCOUNT_FILE_PATH>
              ${SERVICE_ACCOUNT_FILE_PATH}
            </SERVICE_ACCOUNT_FILE_PATH>
            <SERVICE_ACCOUNT_JSON>
              ${SERVICE_ACCOUNT_JSON}
            </SERVICE_ACCOUNT_JSON>
          </environmentVariables>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        </plugin>

        <plugin>
        <groupId>net.masterthought</groupId>
        <artifactId>maven-cucumber-reporting</artifactId>
        <version>5.5.0</version>

        <executions>
          <execution>
            <id>execution</id>
            <phase>verify</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <projectName>Cucumber Reports</projectName> <!-- Replace with project name -->
              <outputDirectory>target/cucumber-reports/advanced-reports</outputDirectory>
              <buildNumber>1</buildNumber>
              <skip>false</skip>
              <inputDirectory>${project.build.directory}/cucumber-reports</inputDirectory>
              <jsonFiles> <!-- supports wildcard or name pattern -->
                <param>**/*.json</param>
              </jsonFiles> <!-- optional, defaults to outputDirectory if not specified -->
              <classificationDirectory>${project.build.directory}/cucumber-reports</classificationDirectory>
              <checkBuildResult>true</checkBuildResult>
            </configuration>
          </execution>
        </executions>
        </plugin>
      </plugins>
      </build>

      <dependencies>
        <dependency>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
          <version>31.1-jre</version>
        </dependency>
        <dependency>
          <groupId>io.cdap.tests.e2e</groupId>
          <artifactId>cdap-e2e-framework</artifactId>
          <version>0.3.1</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
          <version>1.2.8</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>

    </profile>
  </profiles>
</project>
